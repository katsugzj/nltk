<DOC>
<DOCNO>  ZF109-692-385  <DOCNO>
<TEXT>
learn your way around keyboard under fo part 1 even keep mous within reach keyboard still primari interfac pc. O but tell program want remain mysteri user lab note I 'll present overview keyboard work system level. P programm gain understand what' go high-level languag user learn better manag tsrs. M In lab note 'll work entir within do world microsoft window os/2 complet replac default keyboard driver requir differ treatment. P In do world briefest overview keyboard oper given say interrupt 9 process keystrok place keyboard buffer interrupt 16h use applic obtain keystrok keyboard buffer. P As ters summari suggest howev understand keyboard requir familiar hex number 83x86 memori address interrupt 's good idea begin discuss things. M work IN hex M throughout discuss 'll use hexadecim base 16 number known simpli hex. P where 's chanc confus place lowercas h number reminder. P hex number need 16 symbol repres six beyond ten requir decim notat follow 0 9 come A B C D E F. P the number Eh equal 14 decim terms. M just decim number 123 mean 1 time 100 10.sup.2 plu 2 time 10 10.sup.1 plu 3 time 1 10.sup.0 hex number 123h mean 1 time 256 16.sup.2 plu 2 time 16 16.sup.1 plu 3 time 1 16.sup.0 P thu 123h 291 decim complic exampl random 13deh becom 1*4096 + 3*256 + 13*16 +14 5,086 decimal. M If 're unfamiliar work hexadecim notat may tempt tri keep translat hex decimal. P In situat hex number use howev wo n't realli gain anyth translations. P It n't matter interrupt 16h 22 decim start keyboard buffer 41eh 1,054 decimal. P henc I recommend regard hex number simpli number base 16. M even arithmet 'll eventu find much easier hex rather translat decim back. P consid follow exampl M 14fd h 8fa4 h a4a1 h M you learn 13 + 4 17 count 14 15 16 17. O likewis first may learn D + 4 = 11h count E F 10 11. P with practic howev process becom second nature. P and n't PC calcul hex mode rare occas requir hexadecim arithmetic. P even debug give sum differ respect two hex number enter M H nnnn mmmm M prompt nnnn mmmm hex number M 80x86 address schme M A byte 8 bit describ 2 power 8 256 possibilities. O sinc one hex digit correspond 4 bit requir two hex digit describ 1 byte. P byte thu written form xx x repres hex digit. P address written form xxxx xxxx hex number colon call segment number colon offset. P thi curiou way write address requir 4 byte 2 segment 2 offset consequ origin design pc. M with 2 byte 16 bit 4 hex digit could address 2.sup.16 65,536 locations. P the 8088/8086 cpu use origin PC design access 1mb 's 1,048,576 ram locat sizeabl amount memori time. M In absolut linear address term requir 20 bit 5 hex digit O becaus cpu intern design work group 16 bit howev rather cumbersom segment offset scheme us 32 bit repres address could express 20 bit adopted. M sinc 12 extra bit 2.sup.12 4,096 segment offset address 4,096 possibl representations. P thi n't strictli true fewer possibl represent address 1,000h principl clear absolut address memori design mani differ segment offset combinations. P If start call normal address one segment larg possibl offset small possibl deriv 4,095 equival represent repeatedli subtract 1 segment ad 16 10h offset. P If segment le 4,096 1000h ca n't actual 4,096 time 'll hit zero reach number iter M To comput correspond absolut linear address segment offset represent multipli number left colon 10h say shift left one digit add offset. P thu absolut address correspond 1234 abcd M 12340 abcd 1cf0d M again hex/decim convers usual use translat 32-bit represent absolut address except determin whether two segment offset address actual name location. M for exampl address 0040:0010 0000:0410. P To determin shift 0040 left one place yield 00400 0010 get 00410 linear address. P In gener wo n't often need creat equival addresses. P rather given two address 'll want know equivalent. P To convert linear see 're same. M given normal address howev suppos want find equival address differ segment. P let 's assum new segment le start segment amount n't exceed 0fffh. P take differ two segment number multipli 16 10h add result offset. P that 's offset go new segment. P So exampl given 0040:0010 suppos want offset segment 0010. P the differ 30h. P multipli 10h easi shift left one place get 300h. P henc 0010:0310 equival address. M where your keystrok GO M As I mention outset process connect interrupt 9 put keystrok memori buffer process connect interrupt 16 get out. P now know find 's time look go buffer although middl one simplest element chain. M As shown figur 1 first 400h 1,024 decim byte memori address 0000:0000 0000:03ff use cpu store interrupt vector tabl 'll discu later on. P immedi use equival address area 0040:0000 0040:00ff use bio low-level basic input/output system store data includ input keyboard. P these 256 decim memori byte known bio data area bio commun area. P the last 16 byte bio data area call interprocess commun area intend use program exchang data. P In fact area use rare part 's way ensur third program wo n't overwrit first program place second program. M To demonstr keyboard inform store bio data area I 've written simpl turbo pascal program biosdata.ex download PC magnet. P note instruct download program PC magnet includ referenc lab note print articl issu 's free util winwhere.exe. P comment sourc code provid download P biosdata load continu reread display memori region 0040:0000 0040:00ff give real-tim view happen there. P It also period read keyboard exist hit esc. P the 256 byte display address extrem left hex display middl ascii display right seen figur 2. P while help program actual screen read follow discuss understand without it. M make sure capslock numlock scrolllock load biosdata. O the first thing 'll notic two area obvious count byte 0040:0040 0040:006c chang rapidli carryov neighbor bytes. M these noth keyboard might guess keep time. P approxim 18.2 time second comput 's intern clock tick special routin chang byte run. P the byte address 0040:006c count tick sinc midnight address 0040:0040 simpli perform countdown use mechan shut disk drive motor. M press releas right shift key sever times. P you 'll notic byte address 0040:0017h chang back forth 0 1. P now tri thing left shift ctrl key alt key use left ctrl alt machin two P If biosdata would seen behav like right shift except left shift show 2 ctrl 4 alt 8. P now press alt left shift time. P you get 0A decim 10. O that 's exactli sum alt left shift key 8 + 2 P the system store state shift key independ 4 bit byte address 0040:0017. M If tri turn capslock 'll notic two things. P first one bit byte 0040:0018 track whether capslock key physic press not. P sinc toggl rather shift key howev 's import capslock state. P and whether capslock kept 0400:0017 byte keep track shifts. P thu 8 bit byte 0400:0017 use 4 four shift key 4 capslock numlock scrolllock insert toggles. M four bit byte 0040:0018 keep track whether toggl key depressed. P for exampl xywrit treat capslock extra shift use byte. P the lower 4 bit byte go unus origin pc xt earli ats. P when enhanc keyboard introduc howev bit put use keep track differ left right ctrl alt keys. P If enhanc keyboard biosdata tri experi left right alt key watch byte 0040:0017 0040:0018. M now watch ascii charact display right screen hit 1 key top row repeatedli hold P you see byte address 41eh 43dh fill altern 1' happi faces. P thi memori area known keyboard buffer. P If look biosdata 's hex dsplay area 'll see 31h altern 02h. P 31h ascii code charact 1 'll see 02h 's happi face shortly. P tri hit number letter key watch happen ascii represent keyboard buffer. P you 'll find keystrok send pair byte area one even address shown ascii display charact hit. P I 'll explain happen odd byte moment. M next tri altern hit top row plu key gray plu key. O the ascii part surprisingli plu mirror 2bh 's ascii valu plu sign even address hex part display. O but notic half place area differ two keys. P In odd address 'll see 0dh 's top row plu key 4eh 's gray plu key. P If 've ever wonder program distinguish two plu key know. M We 've determin far keystrok 2 byte place keyboard buffer 32-byte memori area 0040:001e 0040:003d. P the even address byte get ascii code. P the odd address byte get code distinguish similar keys. P To confirm watch happen push ctrl-a lowercas uppercas A alt-a. P the result shown M the 1eh go odd address byte obvious connect A key keyboard. P As indic inset call scan code. P It also sometim call softwar scan code order distinguish hardwar scan code 'll see often alway same. M look middl column note sinc ctrl-a ascii charact like uppercas lowercas letter return genuin ascii code. P alt-a n't ascii analog howev return 00h nul code. P for keystrok produc 00h ascii code softwar scan code sometim call extend ascii code. M from exampl might provision conclud scan code byte depend key hit ascii code byte use distinguish among shift state key. P but success hit F1 shift-f1 ctrl-f1 alt-f1 'll get follow result M sinc function key ascii equival ascii code alway 00h is. P but order distinguish shift state function key must violat new provision rule code second half 2-byte combin depend key hit shift state. M for origin PC keyboard complet rule In situat ascii code distinguish shift state ascii code nonzero softwar scan code hardwar scan code 'll investig shortli P for key whose ascii code 0 mean function key arrow scan code hardwar scan code unshift key fix arbitrari convent shift states. M the enhanc keyboard add extra complications. P If one tri two differ left arrow 'll find follow correspond M note extra key introduc enhanc keyboard interrupt 9 place e0h ascii part 2-byte sequenc sinc key e0h valid ascii valu P while mani bother program thu distinguish two arrow key enhanc keyboard. M go around IN circl M while 've watch chang take place keyboard buffer memori area 0040:001e 0040:003d may notic hit variou key byte address 0040:001a 0040:001c also changing. P one locat contain address next keystrok ad tail P the contain address keystrok remov head P biosdata read key fast 're enter head keep tail. M the keyboard buffer queue say keystrok ad queue tail remov head. P the tail pointer 0040:001c 0040:001a head pointer. P when two pointer equal keystrok wait buffer. P If 've type variou keystrok buffer biosdata alway show valu 0040:001c 0040:001a M the reason program constantli lookout esc mean want exit. P It check keystrok updat display. P If keystrok read keyboard buffer use int 16h exit esc. P As result take keystrok buffer fast type in. P for reason head tail buffer seem updat time. P actual slow machin especi one cga turbo pascal us snow check slow display notic 0040:001c get ahead 0040:001a catch take hand keyboard. M the buffer circular loop around pointer reach 0040:003d. P If last keystrok went 0040:003c/0040:003d last byte buffer region next go 0040:001e/0040:001f first byte buffer. M sinc contain 32 byte might think would accommod 16 keystrok address head fix could 16 possibl place tail address be. P but sinc 0 stroke possibl 16 possibl must 0 P 15. P put differ one allow 16 keystrok tail would wrap around catch head would way distinguish empti buffer full one M thi complet I say bio data area. P At point n't explain exactli keystrok get program get program like tsr modifi usual keyboard operations. P We 'll leav part 2 point take question interrupt gener gener keyboard hardwar particular. P thi take u back lowest part memori shown figur 1 area 0000:0000 0040:0000 also afford u chanc explain hardwar scan code often end odd-address byte keyboard buffer. M interrupt and scan code M the intel 80x86 famili design use interrupt primari mean hardwar softwar commun need microprocessor. P hardwar interrupt true interrupt programmers' reckon priorit interrupt control chip motherboard pass cpu action. P thu roughli 18.2 time second clock chip stimul interrupt control caus cpu call interrpt 8 updat time. P and depress releas key keyboard interrupt control get signal tap cpu shoulder tell call interrupt 9. M the altern interrupt-driven system make cpu continu run around variou port poll see one need attention. P that 's way cpu could learn 've press key. P but period poll keyboard port wast lot cpu time even 're activ type rather look screen. P An interrupt system like student rais hand question oppos teacher call class roll ask student point clear. M when program want read keystrok buffer issu softwar interrupt specif interrupt 16. P applic also issu interrupt call upon do servic read write disk. M when interrupt call either hardwar softwar sequenc predetermin step executed. P the routin constitut sequenc call interrupt handler. P whether routin actual locat bio elsewher program must abl access call interrupt number. M that 's first 400h 1,024 decim byte PC 's ram memori come in. P thi area memori call interrupt vector tabl hold 100h 256 address segment offset form. P you 'll recal memori address do world consist 2-byte segment 2-byte offset thu requir 4 byte per address P As part bootup process built-in rom bio hidden system file place address known interrup handler includ default routin keyboard interrupt 9 16 table. P thu exampl interrupt 16h call execut immedi jump 4-byte address start 0000:0058. P If program want enhanc servic provid default routin 's way 'll describ part 2 this. M In addit stimul interrupt control issu interrupt 9 request press releas one key keyboard creat uniqu hardwar scan code. P that code appear keyboard port 60h read interrupt 9 bio code translat 2-byte sequenc go keyboard buffer. M On origin PC hardwar scan code key releas exactli 80h higher code press key. P for exampl scan code key 1eh depress 9eh release. P until reset keyboard whenev cpu look port 60h hardwar scan code return it. P On enhanc keyboard differ new key issu multipl scan code exampl Up arrow cursor pad E0 + 4B depress E0 + CB releas noth ad e0. M the hardwar scan code sequenti number key physic laid origin PC keyboard start esc 01h 1 key 02h on. P from origin keyboard 's point view shift key differ keys. P sinc left shift key adjac \ key scan code becam 2ah 2bh respectively. P As keyboard chang key migrat kept scan code extra key get new codes. M So see hardwar scan code key machin I 've written program int9.exe. P the program return set hardwar scan code call interrupt 9 routines. O int9.ex requir inlin code order put handler insid normal interrupt 9 loop. P thi inlin code taken turbo power softwar 's turbo profession use permission. P becaus number scan code enhanc combin produc display somewhat confus I place blank line everi keyboard-releas scan code occur stroke stacked. O depend exactli interrupt 9 process howev sometim caus extra blank line sequenc eight code produc depress releas cursor key numlock on. M how get scan code port 60h 2-byte sequenc held keyboard buffer start point part 2. M barri simon contribut editor PC magazine. O 
</TEXT>
</DOC>
